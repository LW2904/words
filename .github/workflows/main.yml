name: build

on:
  push:
    branches:
    - master

jobs:
  build:
    name: Build words
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
            file_extension: .exe
            file_name: words.exe
            asset_name: words-windows.exe
          - os: ubuntu-latest
            file_name: words
            asset_name: words-ubuntu
  
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Install D compiler
      uses: mihails-strasuns/setup-dlang@v0.3.0
      with:
        compiler: ldc-latest

    - name: Build project
      run: 'dub build -y --build=release'
    
    - name: Normalize output name
      run: |
        mkdir build
        mv words${{ matrix.file_extension }} build/words-${{ matrix.os }}${{matrix.file_extension}} 
  
    - name: Upload built file
      uses: actions/upload-artifact@v1
      with:
        name: build
        path: build

  release:
    name: Create release
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
    
    - name: Download built files
      uses: actions/download-artifact@v1
      with:
        name: build

    - name: Create Release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: build-${{ github.run_number }}
        release_name: Build ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset Windows
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: build/words-windows-latest.exe
        asset_name: words-windows-latest.exe
        asset_content_type: application/octet-stream

    - name: Upload Release Asset Linux
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: build/words-ubuntu-latest
        asset_name: words-ubuntu-latest
        asset_content_type: application/octet-stream
